% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fitting.R
\name{GPDPQuantReg}
\alias{GPDPQuantReg}
\title{Fits GPDPQuantReg}
\usage{
GPDPQuantReg(
  formula, data, p = 0.5, c_DP = 2, d_DP = 1, c_lambda = 2,
  d_lambda = 0.5, alpha = sqrt(nrow(data)), M = zero_function,
  mcit = 3e4, burn = 1e4, thin = 10
)
}
\arguments{
\item{formula}{formula object with the dependent and independent variables}

\item{data}{data frame}

\item{p}{real between (0,1), probability corresponding to the estimated quantile}

\item{c_DP}{real > 0, shape parameter for the DP's base distribution}

\item{d_DP}{real > 0, scale parameter fot the DP's base distribution}

\item{c_lambda}{real > 0, shape parameter for the GP's lambda distribution}

\item{d_lambda}{real > 0, scale parameter fot the GP's lambda distribution}

\item{alpha}{real > 0, DP's concentration parameter}

\item{M}{function, a priori estimation for the final function}

\item{mcit}{integer > 0, number of MCMC algorithm's valid chains}

\item{burn}{integer > 0, number of MCMC algorithm's first burned chains}

\item{thin}{integer > 0 and < mcit, MCMC algorithm's thinning}
}
\value{
GPDP_MCMC object, with the MCMC algorithm's chains
}
\description{
Runs a MCMC algorithm to fit a quantile regression model, using Gaussian and
Dirichlet Processes. Returns a GPDP_MCMC object with thinned chains.
Scales data in the process so the induced correlation makes sense, and
unscales at the end. Take it into account for the initial parameters.
}
\examples{
m <- 35
x <- sort(sample(seq(-15, 15, 0.005), m))
f_x <- function(x) return((1/40) * x^2 - (1/20) * x - 2)
data <- data.frame(x = x, y = f_x(x) + rnorm(m, 0, 1))
GPDP_MCMC <- fit_GPDPQuantReg(y ~ x, data, p = 0.250)
}
\author{
Omar Pardo (omarpardog@gmail.com)
}
